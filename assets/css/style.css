:root {
    --green: #44ff44;
    --blue: #3344ff;
    --yellow: #dddd33;
    --red: #ff4444;
}

body {
    background: #fff;
}

header {
    text-align: center;
}

main {
    background: #ddd;
}

#operation_picker {
    display: flex;
    justify-content: center;
    gap: 10px;
    padding: 1rem;
}

svg {
    height: 80px;
    width: 80px;
    border-width: calc(80px * 0.15); /* can't specify 15% as border-width */
    stroke-width: 15%;
    border-radius: 50%;
    stroke-linecap: round;
    border-style: solid;
    background: #fff;
    cursor: pointer;
}
svg circle {
    r: 7.5% /* half 15% */
}
.add {
    stroke: var(--green);
    color: var(--green);
}
.subtract {
    stroke: var(--blue);
    color: var(--blue);
}
.multiply {
    stroke: var(--yellow);
    color: var(--yellow);
}
.divide {
    stroke: var(--red);
    color: var(--red);           
}
.divide circle {
    stroke: none;
    fill: var(--red);
}

#operation_picker input {
    display: none;
}

label {
    opacity: 0.7;
    width: 120px;
    height: 120px;
    display: inline-block;
    text-align: center;
}

input:checked+label{
    opacity: 1;
}

#question {
    text-align: center;
    padding: 1em;
    margin: 2em 1em;
    border: 15px solid #FFF;
    border-radius: 40px;
}

input[type=number] {
    appearance: textfield;
    width: 2.5em;
    border: 0;
    padding: .2em;
    text-align: center;
    font-size: 1.5rem;
    vertical-align: middle;
    border-radius: 9px;
}

input[type=number]:disabled {
    color: inherit;
    background: transparent;
}

#equals, #operator {
    font-size: 2em;
    padding: 0.5rem 0;
    vertical-align: middle;
}